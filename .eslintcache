[{"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\index.js":"1","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\App.js":"2","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\reportWebVitals.js":"3","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\Sidebar.js":"4","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\SidebarChat.js":"5","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\index.js":"6","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\App.js":"7","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\reportWebVitals.js":"8","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Modal.js":"9","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Sidebar.js":"10","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Backdrop.js":"11","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\SidebarChat.js":"12","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Chat.js":"13","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\firebase.js":"14","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\CreateChat.js":"15","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Login.js":"16","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\reducer.js":"17","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\StateProvider.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":264,"mtime":1608403447127,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1599,"mtime":1608409803381,"results":"23","hashOfConfig":"20"},{"size":899,"mtime":1608410091602,"results":"24","hashOfConfig":"20"},{"size":709,"mtime":1608653709021,"results":"25","hashOfConfig":"26"},{"size":1321,"mtime":1608654264012,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":812,"mtime":1608661200489,"results":"29","hashOfConfig":"26"},{"size":2379,"mtime":1608661683080,"results":"30","hashOfConfig":"26"},{"size":432,"mtime":1608461300000,"results":"31","hashOfConfig":"26"},{"size":1527,"mtime":1608659040066,"results":"32","hashOfConfig":"26"},{"size":4055,"mtime":1608660258031,"results":"33","hashOfConfig":"26"},{"size":729,"mtime":1608483282601,"results":"34","hashOfConfig":"26"},{"size":2071,"mtime":1608661392991,"results":"35","hashOfConfig":"26"},{"size":1073,"mtime":1608654190699,"results":"36","hashOfConfig":"26"},{"size":796,"mtime":1608661576553,"results":"37","hashOfConfig":"26"},{"size":379,"mtime":1608652940506,"results":"38","hashOfConfig":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1tg5k4h",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"17n9zka",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\index.js",[],["82","83"],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\App.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\reportWebVitals.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\Sidebar.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whatsup-clone\\src\\SidebarChat.js",["84"],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\index.js",[],["85","86"],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\App.js",["87"],"import { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport Modal from \"./Modal\";\nimport Sidebar from \"./Sidebar\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n    const [showBackdrop, setShowBackdrop] = useState();\n\n    const onOpen = (data) => {\n        setShowBackdrop(true);\n    };\n\n    const onClose = (data) => {\n        setShowBackdrop(false);\n    };\n\n    const [{ user }, dispatch] = useStateValue()\n\n    return (\n        <div className=\"app\">\n            {!user ? (\n                <Login />\n            ) : (\n                <div className=\"app__body\">\n                    <Router>\n                        <Modal showModal={showBackdrop} closeModal={onClose} />\n                        <Sidebar showModal={onOpen} />\n                        <Switch>\n                            <Route path=\"/rooms/:roomId\">\n                                <Chat />\n                            </Route>\n\n                            <Route path=\"/\">\n                                <Chat />\n                            </Route>\n                        </Switch>\n                    </Router>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\reportWebVitals.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Modal.js",["88"],"import React, { Fragment } from \"react\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport CreateChat from \"./CreateChat\";\r\nimport \"./Modal.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nconst Modal = ({ showModal, closeModal }) => {\r\n  let isVisible = \"\";\r\n\r\n  const [{modalShow}, dispatch] = useStateValue();\r\n\r\n  if (modalShow === null) {\r\n    isVisible = \"modal\";\r\n  } else if (modalShow === true) {\r\n    isVisible = \"modal__show\";\r\n  } else if (modalShow === false) {\r\n    isVisible = \"modal__close\";\r\n  }\r\n  const closeHandler = (data) => {\r\n    closeModal(data);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop showBackdrop={showModal} backdropClose={closeHandler} />\r\n      <div className={isVisible}>\r\n        <CreateChat />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Sidebar.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Backdrop.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\SidebarChat.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Chat.js",["89"],"import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {\r\n    AttachFile,\r\n    InsertEmoticon,\r\n    Mic,\r\n    MoreVert,\r\n    SearchOutlined,\r\n} from \"@material-ui/icons\";\r\n// import userEvent from \"@testing-library/user-event\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from 'firebase'\r\n\r\nconst Chat = () => {\r\n    const [seed, setSeed] = useState(\"\");\r\n\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const [roomName, setRoomName] = useState(\"\");\r\n\r\n    const { roomId } = useParams();\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [{user}, dispatch] = useStateValue()\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection(\"rooms\")\r\n                .doc(roomId)\r\n                .onSnapshot((snapshot) => setRoomName(snapshot.data()?.name));\r\n        }\r\n        db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot((snapshot) =>\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            name: user.displayName,\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar\r\n                    src={`https://avatars.dicebear.com/api/human/${seed}.svg`}\r\n                />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen {\" \"}\r\n                    {new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map((message, i) => (\r\n                    <p className={`chat__message ${message.name !== user.displayName && \"chat__reciever\"}`}>\r\n                    \r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(\r\n                                message.timestamp?.toDate()\r\n                            ).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <InsertEmoticon />\r\n                </IconButton>\r\n                <form>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Type a Text\"\r\n                        onChange={(e) => {\r\n                            setInput(e.target.value);\r\n                        }}\r\n                        value={input}\r\n                    />\r\n                    <button type=\"submit\" onClick={sendMessage}>\r\n                        Send a Message\r\n                    </button>\r\n                </form>\r\n                <IconButton>\r\n                    <Mic />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\firebase.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\CreateChat.js",["90"],"import React, { useState } from \"react\";\r\nimport \"./CreateChat.css\";\r\nimport db from \"./firebase\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nconst CreateChat = () => {\r\n    const [chatName, setChatName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const createChatRoom = () => {\r\n        db.collection(\"rooms\").add({\r\n            name: chatName,\r\n            description: description !== \"\" ? description : \"No description\",\r\n        });\r\n        setChatName(\"\");\r\n        setDescription(\"\");\r\n        dispatch({\r\n            type: actionTypes.CLOSE_MODAL,\r\n            modal: false\r\n        });\r\n    };\r\n\r\n    const cancelModal = () => {\r\n        dispatch({\r\n            type: actionTypes.CLOSE_MODAL,\r\n            modal: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createChat\">\r\n            <h2>Create chat Room</h2>\r\n            <p>Chat name</p>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type a room name\"\r\n                value={chatName}\r\n                onChange={(event) => {\r\n                    setChatName(event.target.value);\r\n                }}\r\n            />\r\n            <p>Chat description</p>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type a description\"\r\n                value={description}\r\n                onChange={(event) => {\r\n                    setDescription(event.target.value);\r\n                }}\r\n            />\r\n            <div className=\"createChat__buttons\">\r\n                <button\r\n                    className=\"createChat__buttonSuccess\"\r\n                    onClick={createChatRoom}>\r\n                    Create\r\n                </button>\r\n                <button\r\n                    onClick={cancelModal}\r\n                    className=\"createChat__buttonCancel\">\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateChat;\r\n","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\Login.js",["91"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { auth, provider } from './firebase';\r\nimport './Login.css'\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nconst Login = () => {\r\n\r\n    const [{}, dispatch] = useStateValue()\r\n\r\n    const sighIn = () => {\r\n        auth.signInWithPopup(provider).then(result => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user\r\n            })\r\n        }).catch(e => {\r\n            alert(e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n        <div className=\"login__container\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\" alt=\"\"/>\r\n        \r\n        <div className=\"login__text\">\r\n            <h1>Sign in to WhatsAPP</h1>\r\n        </div>\r\n        <Button onClick={sighIn}>\r\n            Sign in with Google\r\n        </Button>\r\n            \r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\reducer.js",[],"C:\\Users\\alexLaptop\\Desktop\\Tutorials-Projects\\MERN-Tutorials\\whatsUp-clone\\whats-app-clone\\src\\StateProvider.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":15,"column":15,"nodeType":"98","messageId":"99","endLine":15,"endColumn":23},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"96","severity":1,"message":"102","line":21,"column":22,"nodeType":"98","messageId":"99","endLine":21,"endColumn":30},{"ruleId":"96","severity":1,"message":"102","line":10,"column":23,"nodeType":"98","messageId":"99","endLine":10,"endColumn":31},{"ruleId":"96","severity":1,"message":"102","line":28,"column":20,"nodeType":"98","messageId":"99","endLine":28,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":10,"column":12,"nodeType":"105","messageId":"106","endLine":10,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":10,"column":12,"nodeType":"105","messageId":"106","endLine":10,"endColumn":14},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'roomName' is assigned a value but never used.","Identifier","unusedVar",["107"],["108"],"'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]